The goal of this assignment is to reinforce and extend a student's knowledge of C.  Specifically, this assignment is to implement a bank account.  A bank account will consist of 3 attributes:
owner - string which is not NULL and has at least 1 character
account number - string which is not NULL, has at least 1 character, all characters are digits
balance - must be non-negative
A bank account will have the following operations on it:
create_account
input: owner, initial balance, account number
output: pointer to a bank account
return NULL is any input is not valid
display_account
input - pointer to a bank account 
displays all attributes of the account - format not specified
does nothing if input pointer is NULL
deposit
input - pointer to bank account (cannot be NULL) & amount of deposit (must be positive)
postcondition: amount has been added to balance
returns 0 if any input is not valid - 1 otherwise
withdraw
input - pointer to bank account (cannot be NULL) & amount of withdrawal (must be positive & cannot be larger than the balance(
postcondition: amount has been subtracted from balance)
returns 0 if any input is not valid - 1 otherwise
delete_account
input - pointer to bank account 
postcondition: all memory allocated to the bank account has been deallocated
does nothing if input pointer is NULL
You need to construct the files bank_account.h, bank_account.c, and test_bank_account.c which tests all the functions (both good data and bad data cases) in bank_account.h.  You need to construct a Makefile.  Please email your source code to your instructor by 8:00 am on  Thursday, February 6th.